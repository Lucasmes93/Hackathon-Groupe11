#!/bin/bash

# Variables
DATE=$(date +"%Y-%m-%d_%H-%M-%S")
REPORT="pentest_mcp_report_$DATE.txt"
TMP_CMD_LOG="/tmp/pentest_cmd_log_$DATE"

exec > >(tee -a "$REPORT") 2>&1

echo "### MCP Docker Pentest Report - $DATE"
echo "Generated by: $(whoami)@$(hostname)"
echo "OS: $(uname -a)"
echo "---------------------------------------"

log_and_run() {
    echo ""
    echo ">>> $1"
    echo "---------------------------------------"
    eval "$1"
}

# Docker Enumeration
log_and_run "docker ps -a"

# Get Container ID
CONTAINER_ID=$(docker ps -q | head -n 1)
if [ -z "$CONTAINER_ID" ]; then
    echo "Aucun container Docker actif trouvé. Abandon."
    exit 1
fi

CONTAINER_NAME=$(docker inspect --format='{{.Name}}' $CONTAINER_ID | sed 's/\///')
CONTAINER_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$CONTAINER_ID")

echo "Container détecté : $CONTAINER_NAME"
echo "IP interne Docker : $CONTAINER_IP"

# Scan ports exposés sur localhost
log_and_run "nmap -sV -p- -T4 localhost"

# Scan de l'IP du container
log_and_run "nmap -sV -p- -T4 $CONTAINER_IP"

# Test de connexion directe sur port 8080 (HTTP API MCP)
log_and_run "nc -vz $CONTAINER_IP 8080"

# Analyse avec mcstatus (si installé)
if command -v mcstatus >/dev/null; then
    log_and_run "mcstatus $CONTAINER_IP status"
else
    echo "mcstatus non installé. Installation recommandée : pip install mcstatus"
fi

# Docker socket check
log_and_run "docker exec $CONTAINER_ID ls -l /var/run/docker.sock"

# Énumération de fichiers SUID (escalade possible)
log_and_run "docker exec $CONTAINER_ID find / -perm -4000 -type f 2>/dev/null"

# Vérification de /etc/passwd et sudoers
log_and_run "docker exec $CONTAINER_ID cat /etc/passwd | grep -v 'nologin'"

# Vérifie si le container est en mode privilégié
PRIVILEGED=$(docker inspect --format='{{.HostConfig.Privileged}}' $CONTAINER_ID)
echo "Container Privileged Mode: $PRIVILEGED"

# Liste des process
log_and_run "docker exec $CONTAINER_ID ps aux"

# Analyse du réseau interne Docker
log_and_run "nmap -sP 172.17.0.0/16"

# --- Tests HTTP, FTP, SSH ---

echo ""
echo "### Tests HTTP, FTP, SSH ###"

# Test HTTP racine
log_and_run "curl -i http://$CONTAINER_IP:8080/"

# Test découverte endpoints HTTP avec ffuf (si installé)
if command -v ffuf >/dev/null; then
    log_and_run "ffuf -u http://$CONTAINER_IP:8080/FUZZ -w /usr/share/wordlists/dirb/common.txt -mc all -t 10"
else
    echo "ffuf non installé. Installation recommandée : sudo apt install ffuf"
fi

# Scan port FTP (21)
log_and_run "nmap -p 21 -sV $CONTAINER_IP"

# Scan port SSH (22)
log_and_run "nmap -p 22 -sV $CONTAINER_IP"

# Tentative connexion SSH (mode batch, sans mot de passe)
log_and_run "ssh -o BatchMode=yes -o ConnectTimeout=5 app@$CONTAINER_IP exit || echo 'Connexion SSH échouée ou accès clé indisponible'"

# Nettoyage temporaire
rm -f "$TMP_CMD_LOG"

echo ""
echo "Rapport généré dans : $REPORT"
